<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="D:\Dev\NUnit\nunit-2.5-branch\src\NUnitDevTests.nunit" total="1193" failures="0" not-run="1" date="2008-01-01" time="09:39:25">
  <environment nunit-version="2.4.6.0" clr-version="1.1.4322.2407" os-version="Microsoft Windows NT 5.1.2600.0" platform="Win32NT" cwd="D:\Dev\NUnit\nunit-2.4-branch\src" machine-name="FERRARI" user="Charlie" user-domain="FERRARI" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite name="D:\Dev\NUnit\nunit-2.5-branch\src\NUnitDevTests.nunit" success="True" time="68.219" asserts="0">
    <results>
      <test-suite name="D:\Dev\NUnit\nunit-2.5-branch\src\NUnitFramework\tests\bin\Debug\nunit.framework.tests.dll" success="True" time="1.906" asserts="0">
        <results>
          <test-suite name="NUnit" success="True" time="1.906" asserts="0">
            <results>
              <test-suite name="Framework" success="True" time="1.906" asserts="0">
                <results>
                  <test-suite name="Constraints" success="True" time="0.469" asserts="0">
                    <results>
                      <test-suite name="Tests" success="True" time="0.469" asserts="0">
                        <results>
                          <test-suite name="AllItemsTests" success="True" time="0.172" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.AllItemsTests.AllItemsAreInRange" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.AllItemsTests.AllItemsAreInRangeFailureMessage" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="NUnit.Framework.Constraints.Tests.AllItemsTests.AllItemsAreInstancesOfType" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.AllItemsTests.AllItemsAreInstancesOfTypeFailureMessage" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="NUnit.Framework.Constraints.Tests.AllItemsTests.AllItemsAreNotNull" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.AllItemsTests.AllItemsAreNotNullFails" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="AndTest" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.AndTest.CanCombineTestsWithAndOperator" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.AndTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="NUnit.Framework.Constraints.Tests.AndTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.AndTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.AndTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="AssignableFromTest" success="True" time="0.031" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.AssignableFromTest.FailsOnBadValues" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.AssignableFromTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.AssignableFromTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.AssignableFromTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="CollectionContainsTests" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.CollectionContainsTests.CanTestContentsOfArray" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.CollectionContainsTests.CanTestContentsOfArrayList" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.CollectionContainsTests.CanTestContentsOfCollectionNotImplementingIList" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.CollectionContainsTests.CanTestContentsOfSortedList" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="EmptyTest" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.EmptyTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EmptyTest.NullGivesArgumentException" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EmptyTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EmptyTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EmptyTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite name="EndsWithTest" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="EndsWithTestIgnoringCase" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTestIgnoringCase.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTestIgnoringCase.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTestIgnoringCase.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EndsWithTestIgnoringCase.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="EqualIgnoringCaseTest" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualIgnoringCaseTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualIgnoringCaseTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualIgnoringCaseTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.016" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualIgnoringCaseTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite name="EqualTest" success="True" time="0.094" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.CanCompareDates" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.CanCompareDatesWithinTolerance" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.FailedStringMatchShowsFailurePosition" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.LongStringsAreTruncated" executed="True" success="True" time="0.063" asserts="2" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.LongStringsAreTruncatedAtBothEndsIfNecessary" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.LongStringsAreTruncatedAtFrontEndIfNecessary" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.NANsCompareAsEqual" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.EqualTest.SucceedsOnGoodValues" executed="True" success="True" time="0.016" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite name="ExactTypeTest" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.ExactTypeTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="NUnit.Framework.Constraints.Tests.ExactTypeTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.ExactTypeTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.ExactTypeTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="GreaterThanOrEqualTest" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanOrEqualTest.BadTypeGivesError" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanOrEqualTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanOrEqualTest.NullGivesError" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanOrEqualTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanOrEqualTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanOrEqualTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="GreaterThanTest" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanTest.BadTypeGivesError" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanTest.NullGivesError" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.GreaterThanTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="InstanceOfTypeTest" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.InstanceOfTypeTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.InstanceOfTypeTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.InstanceOfTypeTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.InstanceOfTypeTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="LessThanOrEqualTest" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.LessThanOrEqualTest.BadTypeGivesError" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.LessThanOrEqualTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.LessThanOrEqualTest.NullGivesError" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.LessThanOrEqualTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.LessThanOrEqualTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.LessThanOrEqualTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="LessThanTest" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.LessThanTest.BadTypeGivesError" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.LessThanTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="NUnit.Framework.Constraints.Tests.LessThanTest.NullGivesError" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.LessThanTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.LessThanTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.LessThanTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="NotTest" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.NotTest.CanUseNotOperator" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.NotTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.NotTest.NotHonorsIgnoreCaseUsingConstructors" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.NotTest.NotHonorsIgnoreCaseUsingPrefixNotation" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.NotTest.NotHonorsTolerance" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.NotTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.NotTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.NotTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="OrTest" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.OrTest.CanCombineTestsWithOrOperator" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.OrTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.OrTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.OrTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.OrTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="SameAsTest" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.SameAsTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.SameAsTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.SameAsTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.SameAsTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="StartsWithTest" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="StartsWithTestIgnoringCase" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTestIgnoringCase.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTestIgnoringCase.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTestIgnoringCase.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.StartsWithTestIgnoringCase.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="SubstringTest" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.SubstringTest.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="NUnit.Framework.Constraints.Tests.SubstringTest.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.SubstringTest.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.SubstringTest.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite name="SubstringTestIgnoringCase" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="NUnit.Framework.Constraints.Tests.SubstringTestIgnoringCase.FailsOnBadValues" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="NUnit.Framework.Constraints.Tests.SubstringTestIgnoringCase.ProvidesProperDescription" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="NUnit.Framework.Constraints.Tests.SubstringTestIgnoringCase.ProvidesProperFailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Framework.Constraints.Tests.SubstringTestIgnoringCase.SucceedsOnGoodValues" executed="True" success="True" time="0.000" asserts="4" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Tests" success="True" time="1.438" asserts="0">
                    <results>
                      <test-suite name="ArrayEqualsFailureMessageFixture" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ActualArrayIsLonger" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ArrayAndCollection_Failure" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ArraysDeclaredAsDifferentTypes" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ArraysHaveDifferentRanks" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ArraysWithDifferentDimensionsAsCollection" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ArraysWithDifferentRanksAsCollection" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.DifferentArrayTypesEqualFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.DoubleDimensionedArrays" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.ExpectedArrayIsLonger" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.FailureOnSingleDimensionedArrays" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.FiveDimensionedArrays" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.JaggedArrayComparedToSimpleArray" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.JaggedArrays" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.SameLengthDifferentContent" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFailureMessageFixture.TripleDimensionedArrays" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ArrayEqualsFixture" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArrayAndCollection" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArrayIsEqualToItself" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArrayOfIntAndArrayOfDouble" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysDeclaredAsDifferentTypes" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysOfArrays" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysOfDecimal" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysOfDouble" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysOfInt" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysOfMixedTypes" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysOfString" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysPassedAsObjects" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysWithDifferentDimensionsMatchedAsCollection" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.ArraysWithDifferentRanksComparedAsCollection" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.DoubleDimensionedArrays" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.FiveDimensionedArrays" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.JaggedArrays" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ArrayEqualsFixture.TripleDimensionedArrays" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ArrayNotEqualFixture" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.ArrayNotEqualFixture.ArraysDeclaredAsDifferentTypes" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.ArrayNotEqualFixture.DifferentLengthArrays" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ArrayNotEqualFixture.SameLengthDifferentContent" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="AssertExtensionTests" success="True" time="0.313" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.AssertExtensionTests.OddNumber" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertExtensionTests.OddNumberFails" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="AssertionTest" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertByte" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertEquals" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertEqualsFail" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertEqualsNaNFails" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertEqualsNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertEqualsSameTypes" executed="True" success="True" time="0.000" asserts="21" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertEqualsTestCaseFail" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertNanEqualsFails" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertNanEqualsNaNSucceeds" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertNegInfinityEqualsInfinity" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertNullNotEqualsNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertPosInfinityEqualsInfinity" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertPosInfinityNotEquals" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertPosInfinityNotEqualsNegInfinity" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertSame" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertSameFails" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertShort" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertSingle" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertSinglePosInfinityNotEqualsNegInfinity" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.AssertString" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.Bug1076043AreEqualsNotTransitiveForDecimal" executed="True" success="True" time="0.000" asserts="9" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.Bug561909FailInheritsFromSystemException" executed="True" success="True" time="0.016" asserts="0" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.Bug575936Int32Int64Comparison" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.Fail" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.FailAssertFalse" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.FailAssertNotNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.IntegerLongComparison" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.SucceedAssertFail" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.AssertionTest.SucceedAssertNotNull" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AssertSyntaxTests" success="True" time="0.250" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.AllItemsTests" executed="True" success="True" time="0.000" asserts="33" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.AndOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.AssignableFromTypeTests" executed="True" success="True" time="0.016" asserts="6" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.CollectionContainsTests" executed="True" success="True" time="0.000" asserts="27" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.CollectionEquivalenceTests" executed="True" success="True" time="0.000" asserts="13" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.ComparisonTests" executed="True" success="True" time="0.000" asserts="26" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.ComplexTests" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EmptyCollectionTests" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EmptyStringTests" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EndsWithTests" executed="True" success="True" time="0.000" asserts="9" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EqualIgnoringCaseTests" executed="True" success="True" time="0.016" asserts="9" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EqualityTests" executed="True" success="True" time="0.000" asserts="14" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EqualityTestsUsingDefaultFloatingPointTolerance" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EqualityTestsWithTolerance" executed="True" success="True" time="0.000" asserts="18" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EqualityTestsWithTolerance_MixedFloatAndDouble" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.EqualityTestsWithTolerance_MixingTypesGenerally" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.ExactTypeTests" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.InstanceOfTypeTests" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.IsFalse" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.IsNaN" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.IsNotNull" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.IsNull" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.IsTrue" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.NoItemTests" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.NotOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.NotTests" executed="True" success="True" time="0.016" asserts="14" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.OrOperator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.PropertyTests" executed="True" success="True" time="0.000" asserts="48" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.RegularExpressionTests" executed="True" success="True" time="0.156" asserts="12" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.SomeItemTests" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.StartsWithTests" executed="True" success="True" time="0.000" asserts="11" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.SubsetTests" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="NUnit.Framework.Tests.AssertSyntaxTests.SubstringTests" executed="True" success="True" time="0.000" asserts="11" />
                        </results>
                      </test-suite>
                      <test-suite name="CollectionAssertTest" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreEqual" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreEqual_HandlesNull" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreEqualFail" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreEqualFailCount" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreEquivalentHandlesNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreNotEqual" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreNotEqual_Fails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.AreNotEqual_HandlesNull" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.Contains_ICollection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.Contains_IList" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ContainsFails_EmptyICollection" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ContainsFails_EmptyIList" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ContainsFails_ICollection" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ContainsFails_ILIst" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ContainsNull_ICollection" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ContainsNull_IList" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.DoesNotContain" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.DoesNotContain_Empty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.DoesNotContain_Fails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.EnsureComparerIsUsed" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.Equivalent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.EquivalentFailOne" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.EquivalentFailTwo" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.IsNotSubsetOf" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.IsNotSubsetOf_Fails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.IsNotSubsetOfHandlesNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.IsSubsetOf" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.IsSubsetOf_Fails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.IsSubsetOfHandlesNull" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ItemsNotNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ItemsNotNullFailure" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ItemsOfType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.ItemsOfTypeFailure" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.NotEquivalent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.NotEquivalent_Fails" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.NotEquivalentHandlesNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.Unique_WithNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.Unique_WithObjects" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.Unique_WithStrings" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.UniqueFailure" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.CollectionAssertTest.UniqueFailure_WithTwoNulls" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ConditionAssertTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsEmpty" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsEmptyFailsOnNonEmptyArray" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsEmptyFailsOnNullString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsEmptyFailsOnString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsFalse" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsFalseFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNaN" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNaNFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotEmpty" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotEmptyFailsOnEmptyArray" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotEmptyFailsOnEmptyArrayList" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotEmptyFailsOnEmptyHashTable" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotEmptyFailsOnEmptyString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNotNullFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsNullFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsTrue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.ConditionAssertTests.IsTrueFails" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="EqualsFixture" success="True" time="0.188" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.Bug575936Int32Int64Comparison" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.Byte" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.DateTimeEqual" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.DateTimeNotEqual" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.Decimal" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.DoubleNotEqualMessageDisplaysAllDigits" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.DoubleNotEqualMessageDisplaysDefaultTolerance" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.DoubleNotEqualMessageDisplaysTolerance" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.DoubleNotEqualWithNanDoesNotDisplayDefaultTolerance" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.EnumsEqual" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.EnumsNotEqual" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.Equals" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.EqualsFail" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.EqualsNaNFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.EqualsNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.EqualsSameTypes" executed="True" success="True" time="0.000" asserts="21" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.EqualsThrowsException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.Float" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.FloatNotEqualMessageDisplaysAllDigits" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.FloatNotEqualMessageDisplaysTolerance" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.Int" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.IntegerEquals" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.IntegerLongComparison" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.NanEqualsFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.NanEqualsNaNSucceeds" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.NegInfinityEqualsInfinity" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.PosInfinityEqualsInfinity" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.PosInfinityNotEquals" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.PosInfinityNotEqualsNegInfinity" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.ReferenceEqualsThrowsException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.Short" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.SinglePosInfinityNotEqualsNegInfinity" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.String" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.EqualsFixture.UInt" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="FileAssertTests" success="True" time="0.297" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualFailsWhenOneIsNull" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualFailsWithFileInfos" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualFailsWithFiles" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualFailsWithStreams" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualFailsWithTextFilesAfterReadingBothFiles" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualPassesUsingSameFileTwice" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualPassesWhenBothAreNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualPassesWithFileInfos" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualPassesWithFiles" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualPassesWithStreams" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreEqualPassesWithTextFiles" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualFailsWhenBothAreNull" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualFailsWithFileInfos" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualFailsWithFiles" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualFailsWithStreams" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualIteratesOverTheEntireFile" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualIteratesOverTheEntireFileAndFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualPassesIfOneIsNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualPassesWithFileInfos" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualPassesWithFiles" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.FileAssertTests.AreNotEqualPassesWithStreams" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="GreaterEqualFixture" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.FailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.GreaterOrEqual_Decimal" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.GreaterOrEqual_Double" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.GreaterOrEqual_Float" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.GreaterOrEqual_Int32" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.GreaterOrEqual_Long" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.GreaterOrEqual_UInt32" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.GreaterOrEqual_ULong" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.MixedTypes" executed="True" success="True" time="0.000" asserts="42" />
                          <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.NotGreaterEqualIComparable" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.GreaterEqualFixture.NotGreaterOrEqual" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="GreaterFixture" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.GreaterFixture.FailureMessage" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.GreaterFixture.Greater" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="NUnit.Framework.Tests.GreaterFixture.MixedTypes" executed="True" success="True" time="0.000" asserts="42" />
                          <test-case name="NUnit.Framework.Tests.GreaterFixture.NotGreater" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.GreaterFixture.NotGreaterIComparable" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.GreaterFixture.NotGreaterWhenEqual" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="LessEqualFixture" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.LessEqualFixture.FailureMessage" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.LessEqualFixture.LessOrEqual" executed="True" success="True" time="0.000" asserts="42" />
                          <test-case name="NUnit.Framework.Tests.LessEqualFixture.MixedTypes" executed="True" success="True" time="0.000" asserts="42" />
                          <test-case name="NUnit.Framework.Tests.LessEqualFixture.NotLessEqualIComparable" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.LessEqualFixture.NotLessOrEqual" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="LessFixture" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.LessFixture.FailureMessage" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.LessFixture.Less" executed="True" success="True" time="0.000" asserts="18" />
                          <test-case name="NUnit.Framework.Tests.LessFixture.MixedTypes" executed="True" success="True" time="0.000" asserts="42" />
                          <test-case name="NUnit.Framework.Tests.LessFixture.NotLess" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.LessFixture.NotLessIComparable" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.LessFixture.NotLessWhenEqual" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ListContentsTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.ListContentsTests.ArrayFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ListContentsTests.ArrayListFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ListContentsTests.ArrayListSucceeds" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.ListContentsTests.ArraySucceeds" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.ListContentsTests.DifferentTypesFail" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ListContentsTests.EmptyArrayFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.ListContentsTests.NullArrayIsError" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="MsgUtilTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.MsgUtilTests.ClipExpectedAndActual_StringsDoNotFitInLine" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.MsgUtilTests.ClipExpectedAndActual_StringsFitInLine" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.MsgUtilTests.ClipExpectedAndActual_StringTailsFitInLine" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.MsgUtilTests.TestClipString" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.MsgUtilTests.TestConvertWhitespace" executed="True" success="True" time="0.000" asserts="14" />
                        </results>
                      </test-suite>
                      <test-suite name="MyAssertionFailureMessage+FailureMessageFixture" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.DisplayListElements" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestClipAroundPosition" executed="True" success="True" time="0.000" asserts="26" />
                          <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestClipAroundPosition2" executed="True" success="True" time="0.000" asserts="80" />
                          <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestConvertWhitespace" executed="True" success="True" time="0.000" asserts="14" />
                          <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestFormatMessageForArraysNotEqual" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestFormatMessageForFailNotEquals" executed="True" success="True" time="0.000" asserts="13" />
                          <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestFormatMessageForFailNotEqualsIgnoringCase" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestFormatMessageForFailNotEqualsNewlines2" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestInputsAreStrings" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestStringLengthsDiffer" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestStringLengthsDiffer2" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.MyAssertionFailureMessage+FailureMessageFixture.TestStringLengthsDiffer3" executed="True" success="True" time="0.031" asserts="995" />
                        </results>
                      </test-suite>
                      <test-suite name="NotEqualFixture" success="True" time="0.172" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.NotEqualFixture.ArraysNotEqual" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.NotEqualFixture.ArraysNotEqualFails" executed="True" success="True" time="0.141" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.NotEqualFixture.NotEqual" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.NotEqualFixture.NotEqualFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.NotEqualFixture.NotEqualSameTypes" executed="True" success="True" time="0.000" asserts="21" />
                          <test-case name="NUnit.Framework.Tests.NotEqualFixture.NullEqualsNull" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.NotEqualFixture.NullNotEqualToNonNull" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.NotEqualFixture.UInt" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="NotSameFixture" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.NotSameFixture.NotSame" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.NotSameFixture.NotSameFails" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SameFixture" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.SameFixture.Same" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.SameFixture.SameFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.SameFixture.SameValueTypes" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="StringAssertTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.StringAssertTests.CaseInsensitiveCompare" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.StringAssertTests.CaseInsensitiveCompareFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.StringAssertTests.Contains" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Framework.Tests.StringAssertTests.ContainsFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.StringAssertTests.EndsWith" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.StringAssertTests.EndsWithFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.StringAssertTests.IsMatch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.StringAssertTests.IsMatchFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.StringAssertTests.StartsWith" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.StringAssertTests.StartsWithFails" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="TextMessageWriterTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.ConnectorIsWrittenWithSurroundingSpaces" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.DateTimeTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.DecimalIsWrittenToTwentyNineDigits" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.DecimalIsWrittenWithTrailingM" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.DisplayStringDifferences" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.DisplayStringDifferences_NoClipping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.DoubleIsWrittenToSeventeenDigits" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.DoubleIsWrittenWithTrailingD" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.FloatIsWrittenToNineDigits" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.FloatIsWrittenWithTrailingF" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.IntegerIsWrittenAsIs" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.PredicateIsWrittenWithTrailingSpace" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TextMessageWriterTests.StringIsWrittenWithQuotes" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TypeAssertTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Framework.Tests.TypeAssertTests.ExactType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TypeAssertTests.ExactTypeFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsAssignableFrom" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsAssignableFromFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsInstanceOfType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsInstanceOfTypeFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsNotAssignableFrom" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsNotAssignableFromFails" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsNotInstanceOfType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Framework.Tests.TypeAssertTests.IsNotInstanceOfTypeFails" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="D:\Dev\NUnit\nunit-2.5-branch\src\NUnitCore\tests\bin\Debug\nunit.core.tests.dll" success="True" time="5.234" asserts="0">
        <results>
          <test-suite name="NUnit" success="True" time="5.234" asserts="0">
            <results>
              <test-suite name="Core" success="True" time="5.234" asserts="0">
                <results>
                  <test-suite name="Tests" success="True" time="5.234" asserts="0">
                    <results>
                      <test-suite name="AssemblyReaderTests" success="True" time="0.391" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.AssemblyReaderTests.CreateFromAssembly" executed="True" success="True" time="0.141" asserts="1" />
                          <test-case name="NUnit.Core.Tests.AssemblyReaderTests.CreateFromPath" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.AssemblyReaderTests.ImageRuntimeVersion" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.AssemblyReaderTests.IsDotNetFile" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.AssemblyReaderTests.IsValidPeFile" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.AssemblyReaderTests.IsValidPeFile_Fails" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AssemblyResolverTests" success="True" time="0.547" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.AssemblyResolverTests.AddFile" executed="True" success="True" time="0.547" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="AssemblyTests" success="True" time="0.297" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.AssemblyTests.AppSettingsLoaded" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.AssemblyTests.LoadAssembly" executed="True" success="True" time="0.172" asserts="2" />
                          <test-case name="NUnit.Core.Tests.AssemblyTests.LoadAssemblyNotFound" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.AssemblyTests.LoadAssemblyWithoutTestFixtures" executed="True" success="True" time="0.094" asserts="4" />
                          <test-case name="NUnit.Core.Tests.AssemblyTests.LoadTestFixtureFromAssembly" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.AssemblyTests.NUnitTraceIsEnabled" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.AssemblyTests.RunSetsCurrentDirectory" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AssemblyVersionFixture" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.AssemblyVersionFixture.Version" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AttributeInheritance" success="True" time="0.109" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.AttributeInheritance.InheritedFixtureAttributeIsRecognized" executed="True" success="True" time="0.094" asserts="1" />
                          <test-case name="NUnit.Core.Tests.AttributeInheritance.InheritedTestAttributeIsRecognized" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CallContextTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.CallContextTests.GenericPrincipalTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.CallContextTests.ILogicalThreadAffinativeTest" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.CallContextTests.ILogicalThreadAffinativeTestConsole" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.CallContextTests.SetCustomPrincipalOnThread" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.CallContextTests.SetGenericPrincipalOnThread" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.CallContextTests.UseCustomIdentity" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="CategoryAttributeTests" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.CategoryAttributeTests.CanDeriveFromCategoryAttribute" executed="True" success="True" time="0.031" asserts="1" />
                          <test-case name="NUnit.Core.Tests.CategoryAttributeTests.CategoryOnFixture" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.CategoryAttributeTests.CategoryOnTestCase" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CoreExtensionsTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.CoreExtensionsTests.HasSuiteBuildersExtensionPoint" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.CoreExtensionsTests.HasTestCaseBuildersExtensionPoint" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.CoreExtensionsTests.HasTestDecoratorsExtensionPoint" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.CoreExtensionsTests.HasTestFrameworkRegistry" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CultureSettingAndDetectionTests" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.CultureSettingAndDetectionTests.CanMatchAttributeWithExclude" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.CultureSettingAndDetectionTests.CanMatchAttributeWithInclude" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.CultureSettingAndDetectionTests.CanMatchAttributeWithIncludeAndExclude" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.CultureSettingAndDetectionTests.CanMatchStrings" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Core.Tests.CultureSettingAndDetectionTests.LoadWithFrenchCanadianCulture" executed="True" success="True" time="0.000" asserts="5">
                            <properties>
                              <property name="_SETCULTURE" value="fr-CA" />
                            </properties>
                          </test-case>
                          <test-case name="NUnit.Core.Tests.CultureSettingAndDetectionTests.LoadWithFrenchCulture" executed="True" success="True" time="0.000" asserts="5">
                            <properties>
                              <property name="_SETCULTURE" value="fr-FR" />
                            </properties>
                          </test-case>
                          <test-case name="NUnit.Core.Tests.CultureSettingAndDetectionTests.LoadWithRussianCulture" executed="True" success="True" time="0.000" asserts="5">
                            <properties>
                              <property name="_SETCULTURE" value="ru-RU" />
                            </properties>
                          </test-case>
                          <test-case name="NUnit.Core.Tests.CultureSettingAndDetectionTests.SettingInvalidCultureGivesError" executed="True" success="True" time="0.016" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="CultureSettingAndDetectionTests+NestedFixture" success="True" time="0.000" asserts="0">
                        <properties>
                          <property name="_SETCULTURE" value="en-GB" />
                        </properties>
                        <results>
                          <test-case name="NUnit.Core.Tests.CultureSettingAndDetectionTests+NestedFixture.CanSetCultureOnFixture" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="DirectorySwapperTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.DirectorySwapperTests.ChangeAndRestore" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.DirectorySwapperTests.SwapAndRestore" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="EventQueueTests" success="True" time="0.188" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.EventQueueTests.PumpAutoStopsOnRunFinished" executed="True" success="True" time="0.031" asserts="3" />
                          <test-case name="NUnit.Core.Tests.EventQueueTests.PumpEvents" executed="True" success="True" time="0.016" asserts="9" />
                          <test-case name="NUnit.Core.Tests.EventQueueTests.PumpEventsWithAutoStop" executed="True" success="True" time="0.109" asserts="7" />
                          <test-case name="NUnit.Core.Tests.EventQueueTests.QueueEvents" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Core.Tests.EventQueueTests.SendEvents" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Core.Tests.EventQueueTests.StartAndStopPumpOnEmptyQueue" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="EventTestFixture" description="Tests that proper events are generated when running  test" success="True" time="0.141" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.EventTestFixture.CheckEventListening" executed="True" success="True" time="0.141" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="ExpectExceptionTest" success="True" time="0.156" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.AssertFailBeforeException" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.CanExpectUnspecifiedException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.ExceptionHandlerIsCalledWhenExceptionMatches" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.ExceptionHandlerIsCalledWhenExceptionMatches_AlternateHandler" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.ExceptionHandlerIsNotCalledWhenExceptionDoesNotMatch" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.ExceptionHandlerIsNotCalledWhenExceptionDoesNotMatch_AlternateHandler" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.MethodThrowsArgumentOutOfRange" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.MethodThrowsException" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.MethodThrowsRightExceptionMessage" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.MethodThrowsWrongExceptionMessage" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.SetUpThrowsSameException" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TearDownThrowsSameException" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestExceptionNameNotThrown" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestExceptionNameNotThrownWithUserMessage" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestExceptionTypeNotThrown" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestExceptionTypeNotThrownWithUserMessage" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestFailsWhenBaseExceptionIsThrown" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestFailsWhenDerivedExceptionIsThrown" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestIsNotRunnableWhenAlternateHandlerIsNotFound" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestMismatchedExceptionMessage" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestMismatchedExceptionMessageWithUserMessage" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestMismatchedExceptionName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestMismatchedExceptionNameWithUserMessage" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestMismatchedExceptionType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestMismatchedExceptionTypeWithUserMessage" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestSucceedsWhenSpecifiedExceptionNameAndContainsMatch" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestSucceedsWhenSpecifiedExceptionNameAndRegexMatch" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestSucceedsWithSpecifiedExceptionName" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestSucceedsWithSpecifiedExceptionNameAndExactMatch" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestSucceedsWithSpecifiedExceptionNameAndMessage_NewFormat" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestSucceedsWithSpecifiedExceptionNameAndMessage_OldFormat" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestSucceedsWithSpecifiedExceptionType" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestSucceedsWithSpecifiedExceptionTypeAndContainsMatch" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestSucceedsWithSpecifiedExceptionTypeAndExactMatch" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestSucceedsWithSpecifiedExceptionTypeAndMessage" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestSucceedsWithSpecifiedExceptionTypeAndRegexMatch" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestUnspecifiedExceptionNotThrown" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.TestUnspecifiedExceptionNotThrownWithUserMessage" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.ThrowingMyAppException" executed="True" success="True" time="0.016" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.ThrowingMyAppExceptionWithMessage" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.ExpectExceptionTest.ThrowNUnitException" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="FailFixture" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.FailFixture.BadStackTraceIsHandled" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.FailFixture.CustomExceptionIsHandled" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.FailFixture.FailInheritsFromSystemException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.FailFixture.FailRecordsInnerException" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Core.Tests.FailFixture.FailThrowsAssertionException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.FailFixture.VerifyAssertionFailWorks" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.FailFixture.VerifyFailWorks" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="FixtureSetupTearDownTest" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.CheckInheritedSetUpAndTearDownAreCalled" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.CheckInheritedSetUpAndTearDownAreNotCalled" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.DisposeCalledWhenFixtureImplementsIDisposable" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.FixtureWithNoTestsShouldNotCallFixtureSetUpOrTearDown" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.HandleErrorInFixtureSetup" executed="True" success="True" time="0.000" asserts="13" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.HandleErrorInFixtureTearDown" executed="True" success="True" time="0.016" asserts="10" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.HandleExceptionInFixtureConstructor" executed="True" success="True" time="0.000" asserts="11" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.HandleIgnoreInFixtureSetup" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.HandleSetUpAndTearDownWithTestInName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.IgnoredFixtureShouldNotCallFixtureSetUpOrTearDown" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.MakeSureSetUpAndTearDownAreCalled" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.MakeSureSetUpAndTearDownAreCalledOnExplicitFixture" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.RerunFixtureAfterSetUpFixed" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.RerunFixtureAfterTearDownFixed" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Core.Tests.FixtureSetupTearDownTest.RunningSingleMethodCallsSetUpAndTearDown" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="IgnoreFixture" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.IgnoreFixture.IgnoreThrowsIgnoreException" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.IgnoreFixture.IgnoreWithUserMessage" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.IgnoreFixture.IgnoreWithUserMessage_ArrayOfArgs" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.IgnoreFixture.IgnoreWithUserMessage_OneArg" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.IgnoreFixture.IgnoreWithUserMessage_ThreeArgs" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.IgnoreFixture.IgnoreWorksForTestCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.IgnoreFixture.IgnoreWorksForTestSuite" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.IgnoreFixture.IgnoreWorksFromSetUp" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="LegacySuiteTests" success="True" time="0.266" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.LegacySuiteTests.SetUpAndTearDownAreCalled" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.LegacySuiteTests.SuitePropertyWithInvalidType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.LegacySuiteTests.SuiteReturningFixtures" executed="True" success="True" time="0.141" asserts="3" />
                          <test-case name="NUnit.Core.Tests.LegacySuiteTests.SuiteReturningTestSuite" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.LegacySuiteTests.SuiteReturningTypes" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="NameFilterTest" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.NameFilterTest.ExplicitTestCaseDoesNotMatchWhenNotSelectedDirectly" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.NameFilterTest.ExplicitTestCaseMatchesWhenSelectedDirectly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.NameFilterTest.ExplicitTestSuiteDoesNotMatchWhenNotSelectedDirectly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.NameFilterTest.ExplicitTestSuiteMatchesWhenSelectedDirectly" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.NameFilterTest.HighLevelSuite" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="NUnit.Core.Tests.NameFilterTest.MultipleNameMatch" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.NameFilterTest.SingleNameMatch" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Core.Tests.NameFilterTest.SuiteNameMatch" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.NameFilterTest.TestDoesNotMatch" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="NamespaceAssemblyTests" success="True" time="0.125" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.NamespaceAssemblyTests.Hierarchy" executed="True" success="True" time="0.000" asserts="20" />
                          <test-case name="NUnit.Core.Tests.NamespaceAssemblyTests.LoadTestFixtureFromAssembly" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.NamespaceAssemblyTests.NoNamespaceInAssembly" executed="True" success="True" time="0.094" asserts="5" />
                          <test-case name="NUnit.Core.Tests.NamespaceAssemblyTests.TestRoot" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PlatformDetectionTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.ArrayOfPlatforms" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectExactVersion" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectMono10" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectMono20" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectNet10" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectNet11" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectNet20" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectNetCF" executed="True" success="True" time="0.000" asserts="9" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectNT3" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectNT4" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectSSCLI" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectUnixUnderMicrosoftDotNet" executed="True" success="True" time="0.000" asserts="14" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectUnixUnderMono" executed="False">
                            <reason>
                              <message><![CDATA[Not supported on Net]]></message>
                            </reason>
                          </test-case>
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectWin2003Server" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectWin2K" executed="True" success="True" time="0.000" asserts="11" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectWin95" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectWin98" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectWinCE" executed="True" success="True" time="0.000" asserts="13" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectWinMe" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.DetectWinXP" executed="True" success="True" time="0.000" asserts="11" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.PlatformAttribute_Exclude" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.PlatformAttribute_Include" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.PlatformAttribute_IncludeAndExclude" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="NUnit.Core.Tests.PlatformDetectionTests.PlatformAttribute_InvalidPlatform" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="PropertyAttributeTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.PropertyAttributeTests.CanDeriveFromPropertyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.PropertyAttributeTests.PropertiesWithNumericValues" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.PropertyAttributeTests.PropertyWithStringValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.PropertyAttributeTests.PropertyWorksOnFixtures" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ReflectTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.ReflectTests.CanDetectAttributes" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.CanDetectInheritedAttributes" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.Construct" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.CountMethodsWithAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.GetAttribute" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.GetAttributes" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.GetConstructor" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.GetInheritedAttribute" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.GetInheritedAttributes" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.GetMethodWithAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.GetNamedMethod" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.GetNamedMethodWithArgs" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.GetNamedProperty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.GetPropertyValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.GetPropertyWithAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.HasInterface" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.InheritsFrom" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ReflectTests.InvokeMethod" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="RemoteRunnerTests" success="True" time="0.531" asserts="1">
                        <results>
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.CheckRunnerID" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.CountTestCases" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.CountTestCasesAcrossMultipleAssemblies" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.LoadAssembly" executed="True" success="True" time="0.219" asserts="1" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.LoadAssemblyWithFixture" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.LoadAssemblyWithoutNamespaces" executed="True" success="True" time="0.031" asserts="4" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.LoadAssemblyWithSuite" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.LoadMultipleAssemblies" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.LoadMultipleAssembliesWithFixture" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.LoadMultipleAssembliesWithSuite" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.RunAssembly" executed="True" success="True" time="0.156" asserts="1" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.RunAssemblyUsingBeginAndEndRun" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.RunMultipleAssemblies" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.RemoteRunnerTests.RunMultipleAssembliesUsingBeginAndEndRun" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SerializationBug" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.SerializationBug.SaveAndLoad" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="SetUpFixtureTests" success="True" time="0.266" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.SetUpFixtureTests.AssemblySetUpFixtureReplacesAssemblyNodeInTree" executed="True" success="True" time="0.156" asserts="4" />
                          <test-case name="NUnit.Core.Tests.SetUpFixtureTests.AssemblySetupFixtureWrapsExecutionOfTest" executed="True" success="True" time="0.047" asserts="5" />
                          <test-case name="NUnit.Core.Tests.SetUpFixtureTests.NamespaceSetUpFixtureReplacesNamespaceNodeInTree" executed="True" success="True" time="0.000" asserts="14" />
                          <test-case name="NUnit.Core.Tests.SetUpFixtureTests.NamespaceSetUpFixtureWrapsExecutionOfSingleTest" executed="True" success="True" time="0.016" asserts="8" />
                          <test-case name="NUnit.Core.Tests.SetUpFixtureTests.NamespaceSetUpFixtureWrapsExecutionOfTwoTests" executed="True" success="True" time="0.000" asserts="13" />
                          <test-case name="NUnit.Core.Tests.SetUpFixtureTests.NamespaceSetUpFixtureWrapsNestedNamespaceSetUpFixture" executed="True" success="True" time="0.016" asserts="15" />
                          <test-case name="NUnit.Core.Tests.SetUpFixtureTests.WithTwoSetUpFixtuesOnlyOneIsUsed" executed="True" success="True" time="0.000" asserts="8" />
                        </results>
                      </test-suite>
                      <test-suite name="SetUpTest" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.SetUpTest.CheckInheritedSetUpAndTearDownAreCalled" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.SetUpTest.CheckInheritedSetUpAndTearDownAreNotCalled" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Core.Tests.SetUpTest.MakeSureSetUpAndTearDownAreCalled" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.SetUpTest.SetUpAndTearDownCounter" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SimpleNameFilterTests" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.SimpleNameFilterTests.ExplicitTestCaseDoesNotMatchWhenNotSelectedDirectly" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SimpleNameFilterTests.ExplicitTestCaseMatchesWhenSelectedDirectly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.SimpleNameFilterTests.ExplicitTestSuiteDoesNotMatchWhenNotSelectedDirectly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.SimpleNameFilterTests.ExplicitTestSuiteMatchesWhenSelectedDirectly" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="NUnit.Core.Tests.SimpleNameFilterTests.HighLevelSuite" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.SimpleNameFilterTests.MultipleNameMatch" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.SimpleNameFilterTests.SingleNameMatch" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Core.Tests.SimpleNameFilterTests.SuiteNameMatch" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="NUnit.Core.Tests.SimpleNameFilterTests.TestDoesNotMatch" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SimpleTestRunnerTests" success="True" time="0.156" asserts="1">
                        <results>
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.CheckRunnerID" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.CountTestCases" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.CountTestCasesAcrossMultipleAssemblies" executed="True" success="True" time="0.047" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.LoadAssembly" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.LoadAssemblyWithFixture" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.LoadAssemblyWithoutNamespaces" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.LoadAssemblyWithSuite" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.LoadMultipleAssemblies" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.LoadMultipleAssembliesWithFixture" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.LoadMultipleAssembliesWithSuite" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.RunAssembly" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.RunAssemblyUsingBeginAndEndRun" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.RunMultipleAssemblies" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SimpleTestRunnerTests.RunMultipleAssembliesUsingBeginAndEndRun" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="StackOverflowTestFixture" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.StackOverflowTestFixture.SimpleOverflow" executed="True" success="True" time="0.047" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SuiteBuilderTests" success="True" time="0.516" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests.DiscoverSuite" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests.FileNotFound" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests.FixtureNotFound" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests.InvalidAssembly" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests.LoadAssembly" executed="True" success="True" time="0.156" asserts="3" />
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests.LoadAssemblyWithoutNamespaces" executed="True" success="True" time="0.156" asserts="3" />
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests.LoadFixture" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests.LoadNamespaceAsSuite" executed="True" success="True" time="0.156" asserts="3" />
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests.LoadSuite" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests.WrongReturnTypeSuite" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SuiteBuilderTests_Multiple" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests_Multiple.BuildSuite" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests_Multiple.LoadFixture" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests_Multiple.RootNode" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.SuiteBuilderTests_Multiple.TestCaseCount" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TestAssemblyBuilderTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestAssemblyBuilderTests.CanLoadAssemblyAtRelativeDirectoryLocation" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestAssemblyBuilderTests.CanLoadAssemblyInCurrentDirectory" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TestAttributeFixture" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestAttributeFixture.Description" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestAttributeFixture.DescriptionInResult" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.TestAttributeFixture.FixtureDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestAttributeFixture.FixtureDescriptionInResult" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestAttributeFixture.NoDescription" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestAttributeFixture.ReflectionTest" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestAttributeFixture.SeparateDescriptionAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestAttributeFixture.SeparateDescriptionInResult" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="TestCaseResultFixture" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestCaseResultFixture.TestCaseDefault" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestCaseResultFixture.TestCaseFailure" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="NUnit.Core.Tests.TestCaseResultFixture.TestCaseNotRun" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestCaseResultFixture.TestCaseSuccess" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TestCaseTest" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestCaseTest.CreateIgnoredTestCase" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.TestCaseTest.LoadMethodCategories" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.TestCaseTest.RunIgnoredTestCase" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="TestConsole" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestConsole.ConsoleWrite" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Core.Tests.TestConsole.ConsoleWriteLine" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="TestContextTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestContextTests.SetAndRestoreCurrentCulture" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Core.Tests.TestContextTests.SetAndRestoreCurrentDirectory" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="TestDelegateFixture" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestDelegateFixture.DelegateTest" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TestFixtureBuilderTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestFixtureBuilderTests.GoodSignature" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestFixtureBuilderTests.LoadCategories" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="TestFixtureExtension" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestFixtureExtension.CheckMultipleSetUp" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureExtension.DerivedTest" executed="True" success="True" time="0.078" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureExtension.InheritSetup" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureExtension.InheritTearDown" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TestFixtureTests" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunAbstractDerivedFixture" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunAbstractFixture" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunBadConstructor" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunFixtureSetupWithParameters" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunFixtureSetupWithReturnValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunFixtureTearDownWithParameters" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunFixtureTearDownWithReturnValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunIgnoredFixture" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunMultipleSetUp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunMultipleTearDown" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunMultipleTestFixtureSetUp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunMultipleTestFixtureTearDown" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunNoDefaultConstructor" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunPrivateFixtureSetUp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunPrivateFixtureTearDown" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunPrivateSetUp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunPrivateTearDown" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunProtectedFixtureSetUp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunProtectedFixtureTearDown" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunProtectedSetUp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunProtectedTearDown" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunSetupWithParameters" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunSetupWithReturnValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunStaticFixtureSetUp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunStaticFixtureTearDown" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunStaticSetUp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunStaticTearDown" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunTearDownWithParameters" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.CannotRunTearDownWithReturnValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.ConstructFromDoublyNestedType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.ConstructFromNestedType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.ConstructFromType" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestFixtureTests.ConstructFromTypeWithoutNamespace" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="TestFrameworkTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestFrameworkTests.NUnitFrameworkIsKnownAndReferenced" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="TestIDTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestIDTests.ClonedTestIDsAreEqual" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.TestIDTests.DifferentTestIDsAreNotEqual" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.TestIDTests.DifferentTestIDsDisplayDifferentStrings" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TestInfoTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestInfoTests.ConstructFromFixture" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Core.Tests.TestInfoTests.ConstructFromSuite" executed="True" success="True" time="0.016" asserts="7" />
                          <test-case name="NUnit.Core.Tests.TestInfoTests.ConstructFromTestCase" executed="True" success="True" time="0.000" asserts="7" />
                        </results>
                      </test-suite>
                      <test-suite name="TestNameTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestNameTests.CanCompareStrongTestNames" executed="True" success="True" time="0.000" asserts="9" />
                          <test-case name="NUnit.Core.Tests.TestNameTests.CanCompareWeakAndStrongTestNames" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.TestNameTests.CanCompareWeakTestNames" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Core.Tests.TestNameTests.CanDisplayUniqueNames" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestNameTests.CanParseSimpleTestNames" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestNameTests.CanParseStrongTestNames" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestNameTests.CanParseWeakTestNames" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestNameTests.ClonedTestNamesAreEqual" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Core.Tests.TestNameTests.TestNamesWithDifferentRunnerIDsAreNotEqual" executed="True" success="True" time="0.000" asserts="7" />
                        </results>
                      </test-suite>
                      <test-suite name="TestNodeTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestNodeTests.ConstructFromMultipleTests" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Core.Tests.TestNodeTests.ConstructFromSuite" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Core.Tests.TestNodeTests.ConstructFromTestCase" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TestRunnerThreadTests" success="True" time="0.188" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestRunnerThreadTests.RunMultipleTests" executed="True" success="True" time="0.172" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestRunnerThreadTests.RunNamedTest" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestRunnerThreadTests.RunTestSuite" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="TestSuiteResultFixture" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestSuiteResultFixture.EmptySuite" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteResultFixture.SuiteSuccess" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteResultFixture.TestSuiteFailure" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="TestSuiteTest" success="True" time="0.125" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.CanSortUsingExternalComparer" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.CountTestCasesFilteredByName" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.DefaultSortIsByName" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.ExcludingCategoryDoesNotRunExplicitTestCases" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.ExcludingCategoryDoesNotRunExplicitTestFixtures" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.InheritedTestCount" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.RunExplicitTestByCategory" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.RunExplicitTestByName" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.RunExplicitTestDirectly" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.RunNoTestSuite" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.RunSingleTest" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.RunSuiteByCategory" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.RunSuiteByName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.RunTestByCategory" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.RunTestByName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.RunTestExcludingCategory" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.RunTestsInFixture" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.SuiteRunInitialized" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.TestSuiteTest.SuiteWithNoTests" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="ThreadedTestRunnerTests" success="True" time="0.203" asserts="1">
                        <results>
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.CheckRunnerID" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.CountTestCases" executed="True" success="True" time="0.078" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.CountTestCasesAcrossMultipleAssemblies" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.LoadAssembly" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.LoadAssemblyWithFixture" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.LoadAssemblyWithoutNamespaces" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.LoadAssemblyWithSuite" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.LoadMultipleAssemblies" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.LoadMultipleAssembliesWithFixture" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.LoadMultipleAssembliesWithSuite" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.RunAssembly" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.RunAssemblyUsingBeginAndEndRun" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.RunMultipleAssemblies" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Core.Tests.ThreadedTestRunnerTests.RunMultipleAssembliesUsingBeginAndEndRun" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlTest" success="True" time="0.266" asserts="0">
                        <results>
                          <test-case name="NUnit.Core.Tests.XmlTest.removeTime" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Core.Tests.XmlTest.TestSchemaValidatorFrenchCulture" executed="True" success="True" time="0.172" asserts="1">
                            <properties>
                              <property name="_SETCULTURE" value="fr-FR" />
                            </properties>
                          </test-case>
                          <test-case name="NUnit.Core.Tests.XmlTest.TestSchemaValidatorInvariantCulture" executed="True" success="True" time="0.031" asserts="1">
                            <properties>
                              <property name="_SETCULTURE" value="" />
                            </properties>
                          </test-case>
                          <test-case name="NUnit.Core.Tests.XmlTest.TestSchemaValidatorUnitedStatesCulture" executed="True" success="True" time="0.016" asserts="1">
                            <properties>
                              <property name="_SETCULTURE" value="en-US" />
                            </properties>
                          </test-case>
                          <test-case name="NUnit.Core.Tests.XmlTest.TestStream" executed="True" success="True" time="0.031" asserts="1">
                            <properties>
                              <property name="_SETCULTURE" value="en-US" />
                            </properties>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="D:\Dev\NUnit\nunit-2.5-branch\src\ClientUtilities\tests\bin\Debug\nunit.util.tests.dll" success="True" time="35.656" asserts="0">
        <results>
          <test-suite name="NUnit" success="True" time="35.656" asserts="0">
            <results>
              <test-suite name="Util" success="True" time="35.656" asserts="0">
                <results>
                  <test-suite name="Tests" success="True" time="35.656" asserts="0">
                    <results>
                      <test-suite name="AssemblyListTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.AssemblyListTests.AddFiresChangedEvent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.AssemblyListTests.CanAddAssemblies" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.AssemblyListTests.CanRemoveAssemblies" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.AssemblyListTests.EmptyList" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.AssemblyListTests.MustAddAbsolutePath" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Util.Tests.AssemblyListTests.RemoveAtFiresChangedEvent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.AssemblyListTests.RemoveFiresChangedEvent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.AssemblyListTests.SettingFullPathFiresChangedEvent" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CategoryManagerTest" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.CategoryManagerTest.CanAddAllAvailableCategoriesInTestTree" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Util.Tests.CategoryManagerTest.CanAddStrings" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.CategoryManagerTest.CanAddStringsWithoutDuplicating" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.CategoryManagerTest.CanAddTestCategories" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.CategoryManagerTest.CanClearEntries" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CategoryParseTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.CategoryParseTests.CanParseCompoundCategory" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.CategoryParseTests.CanParseExcludedCategories" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.CategoryParseTests.CanParseMultipleAlternatives" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.CategoryParseTests.CanParseMultipleCategoriesWithAnd" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.CategoryParseTests.CanParseSimpleCategory" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.CategoryParseTests.EmptyStringReturnsEmptyFilter" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.CategoryParseTests.OrAndMinusCombined" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.CategoryParseTests.PlusAndMinusCombined" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Util.Tests.CategoryParseTests.PrecedenceTest" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.CategoryParseTests.PrecedenceTestWithParentheses" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="EventDispatcherTests" success="True" time="0.125" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.ProjectLoaded" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.ProjectLoadFailed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.ProjectLoading" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.ProjectUnloaded" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.ProjectUnloadFailed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.ProjectUnloading" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.RunFailed" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.RunFinished" executed="True" success="True" time="0.031" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.RunStarting" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.SuiteFinished" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.SuiteStarting" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.TestFinished" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.TestLoaded" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.TestLoadFailed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.TestLoading" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.TestReloaded" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.TestReloadFailed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.TestReloading" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.TestStarting" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.TestUnloaded" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.TestUnloadFailed" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.EventDispatcherTests.TestUnloading" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="FileWatcherTest" success="True" time="0.922" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.FileWatcherTest.ChangingAttributesDoesNotTriggerWatcher" executed="True" success="True" time="0.219" asserts="1" />
                          <test-case name="NUnit.Util.Tests.FileWatcherTest.ChangingFileTriggersWatcher" executed="True" success="True" time="0.203" asserts="2" />
                          <test-case name="NUnit.Util.Tests.FileWatcherTest.CopyingFileDoesNotTriggerWatcher" executed="True" success="True" time="0.203" asserts="1" />
                          <test-case name="NUnit.Util.Tests.FileWatcherTest.MultipleCloselySpacedChangesTriggerWatcherOnlyOnce" executed="True" success="True" time="0.297" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="MemorySettingsStorageTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.MemorySettingsStorageTests.MakeStorage" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.MemorySettingsStorageTests.MakeSubStorages" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.MemorySettingsStorageTests.RemoveSettings" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.MemorySettingsStorageTests.SaveAndLoadSettings" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.MemorySettingsStorageTests.SubstorageSettings" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.MemorySettingsStorageTests.TypeSafeSettings" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="NUnitProjectLoad" success="True" time="0.469" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.FromAssembly" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.FromCppProject" executed="True" success="True" time="0.094" asserts="5" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.FromCSharpProject" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.FromJsharpProject" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.FromMakefileProject" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.FromProjectWithHebrewFileIncluded" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.FromVBProject" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.FromVSSolution2003" executed="True" success="True" time="0.063" asserts="7" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.FromVSSolution2005" executed="True" success="True" time="0.031" asserts="7" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.FromWebApplication" executed="True" success="True" time="0.063" asserts="3" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.LoadEmptyConfigs" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.LoadEmptyProject" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.LoadNormalProject" executed="True" success="True" time="0.016" asserts="7" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.LoadProjectWithManualBinPath" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.SaveClearsAssemblyWrapper" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectLoad.WithUnmanagedCpp" executed="True" success="True" time="0.031" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="NUnitProjectSave" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.NUnitProjectSave.SaveEmptyConfigs" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectSave.SaveEmptyProject" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectSave.SaveNormalProject" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="NUnitProjectTests" success="True" time="0.141" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.AddConfigMakesProjectDirty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.CanAddAssemblies" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.CanAddConfigs" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.CanSetActiveConfig" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.CanSetAppBase" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.ConfigurationFileFromAssemblies" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.ConfigurationFileFromAssembly" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.DefaultActiveConfig" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.DefaultApplicationBase" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.DefaultConfigurationFile" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.DefaultProjectName" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.IsProjectFile" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.LoadMakesProjectNotDirty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.NewProjectDefaultPath" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.NewProjectIsEmpty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.NewProjectIsNotDirty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.NewProjectNotLoadable" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.RemoveActiveConfig" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.RemoveConfigMakesProjectDirty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.RenameActiveConfig" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.RenameConfigMakesProjectDirty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.SaveAndLoadConfigsWithAssemblies" executed="True" success="True" time="0.047" asserts="8" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.SaveAndLoadEmptyConfigs" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.SaveAndLoadEmptyProject" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.SaveMakesProjectNotDirty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.SaveSetsProjectPath" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitProjectTests.SettingActiveConfigMakesProjectDirty" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="NUnitRegistryTests" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.NUnitRegistryTests.CurrentUser" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitRegistryTests.CurrentUserTestMode" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitRegistryTests.LocalMachine" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitRegistryTests.LocalMachineTestMode" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.NUnitRegistryTests.TestClearRoutines" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="PathUtilTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.PathUtilTests.CheckDefaults" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="PathUtilTests_Unix" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.PathUtilTests_Unix.Canonicalize" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.PathUtilTests_Unix.IsAssemblyFileType" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.PathUtilTests_Unix.PathFromUri" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.PathUtilTests_Unix.RelativePath" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.PathUtilTests_Unix.SamePath" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.PathUtilTests_Unix.SamePathOrUnder" executed="True" success="True" time="0.000" asserts="7" />
                        </results>
                      </test-suite>
                      <test-suite name="PathUtilTests_Windows" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.PathUtilTests_Windows.Canonicalize" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.PathUtilTests_Windows.IsAssemblyFileType" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.PathUtilTests_Windows.PathFromUri" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.PathUtilTests_Windows.RelativePath" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.PathUtilTests_Windows.SamePath" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.PathUtilTests_Windows.SamePathOrUnder" executed="True" success="True" time="0.000" asserts="9" />
                        </results>
                      </test-suite>
                      <test-suite name="ProjectConfigCollectionTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.ProjectConfigCollectionTests.AddConfig" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigCollectionTests.AddMakesProjectDirty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigCollectionTests.AddTwoConfigs" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigCollectionTests.BuildConfigAndAdd" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigCollectionTests.EmptyCollection" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ProjectConfigTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.AbsoluteBasePath" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.AbsoluteConfigurationFile" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.AddMarksProjectDirty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.CanAddAssemblies" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.DefaultConfigurationFile" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.EmptyConfig" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.ManualPrivateBinPath" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.NoBasePathSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.NoPrivateBinPath" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.RelativeBasePath" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.RelativeConfigurationFile" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.RemoveMarksProjectDirty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.RenameMarksProjectDirty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.SettingApplicationBaseMarksProjectDirty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.SettingBinPathTypeMarksProjectDirty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.SettingConfigurationFileMarksProjectDirty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.SettingPrivateBinPathMarksProjectDirty" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Util.Tests.ProjectConfigTests.ToArray" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="RecentFileEntryTests" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.RecentFileEntryTests.CanCreateFromFileNameAndVersion" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.RecentFileEntryTests.CanCreateFromSimpleFileName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.RecentFileEntryTests.CanParseFileNamePlusVersionString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.RecentFileEntryTests.CanParseFileNameWithCommaPlusVersionString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.RecentFileEntryTests.CanParseSimpleFileName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.RecentFileEntryTests.CanParseSimpleFileNameWithComma" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.RecentFileEntryTests.EntryCanDisplayItself" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="RecentFilesTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.AddMaxItems" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.AddSingleItem" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.AddTooManyItems" executed="True" success="True" time="0.016" asserts="7" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.CountAtMax" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.CountAtMin" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.CountDefault" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.CountOverMax" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.CountUnderMin" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.EmptyList" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.IncreaseSize" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.IncreaseSizeAfterAdd" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.ReduceSize" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.ReduceSizeAfterAdd" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.RemoveFirstProject" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.RemoveLastProject" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.RemoveMultipleProjects" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.RemoveOneProject" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.ReorderLastProject" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.ReorderMultipleProjects" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.ReorderSameProject" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.ReorderSingleProject" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Util.Tests.RecentFilesTests.ReorderWithListNotFull" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="RegistrySettingsStorageTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.RegistrySettingsStorageTests.MakeSubStorages" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="NUnit.Util.Tests.RegistrySettingsStorageTests.RemoveSettings" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.RegistrySettingsStorageTests.SaveAndLoadSettings" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Util.Tests.RegistrySettingsStorageTests.StorageHasCorrectKey" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.RegistrySettingsStorageTests.SubstorageSettings" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.RegistrySettingsStorageTests.TypeSafeSettings" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="RemoteTestResultTest" success="True" time="1.391" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.RemoteTestResultTest.ResultStillValidAfterDomainUnload" executed="True" success="True" time="1.391" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="ServerUtilityTests" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.ServerUtilityTests.CanGetTcpChannelOnSpecifiedPort" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="NUnit.Util.Tests.ServerUtilityTests.CanGetTcpChannelOnUnpecifiedPort" executed="True" success="True" time="0.016" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="SettingsGroupTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.SettingsGroupTests.BadSetting" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.SettingsGroupTests.DefaultSettings" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="NUnit.Util.Tests.SettingsGroupTests.SubGroupSettings" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="NUnit.Util.Tests.SettingsGroupTests.TopLevelSettings" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="NUnit.Util.Tests.SettingsGroupTests.TypeSafeSettings" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="SummaryResultFixture" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.SummaryResultFixture.Failure" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.SummaryResultFixture.TestCountNotRunSuites" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Util.Tests.SummaryResultFixture.TestTime" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.SummaryResultFixture.TotalCountSuccess" executed="True" success="True" time="0.000" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="TestDomainFixture" success="True" time="1.125" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.TestDomainFixture.AppDomainIsSetUpCorrectly" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Util.Tests.TestDomainFixture.AssemblyIsLoadedCorrectly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.TestDomainFixture.CanRunMockAssemblyTests" executed="True" success="True" time="0.141" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="TestDomainRunnerTests" success="True" time="15.234" asserts="1">
                        <results>
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.CheckRunnerID" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.CountTestCases" executed="True" success="True" time="0.938" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.CountTestCasesAcrossMultipleAssemblies" executed="True" success="True" time="1.016" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.LoadAssembly" executed="True" success="True" time="1.266" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.LoadAssemblyWithFixture" executed="True" success="True" time="0.953" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.LoadAssemblyWithoutNamespaces" executed="True" success="True" time="1.031" asserts="4" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.LoadAssemblyWithSuite" executed="True" success="True" time="0.969" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.LoadMultipleAssemblies" executed="True" success="True" time="1.156" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.LoadMultipleAssembliesWithFixture" executed="True" success="True" time="1.188" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.LoadMultipleAssembliesWithSuite" executed="True" success="True" time="1.234" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.RunAssembly" executed="True" success="True" time="1.219" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.RunAssemblyUsingBeginAndEndRun" executed="True" success="True" time="1.188" asserts="2" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.RunMultipleAssemblies" executed="True" success="True" time="1.578" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainRunnerTests.RunMultipleAssembliesUsingBeginAndEndRun" executed="True" success="True" time="1.344" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="TestDomainTests" success="True" time="6.953" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.TestDomainTests.BasePathOverrideIsHonored" executed="True" success="True" time="1.188" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainTests.BinPathOverrideIsHonored" executed="True" success="True" time="1.109" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainTests.ConfigFileOverrideIsHonored" executed="True" success="True" time="1.047" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainTests.FileNotFound" executed="True" success="True" time="0.922" asserts="0" />
                          <test-case name="NUnit.Util.Tests.TestDomainTests.InvalidTestFixture" executed="True" success="True" time="1.109" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainTests.SpecificTestFixture" executed="True" success="True" time="1.234" asserts="3" />
                          <test-case name="NUnit.Util.Tests.TestDomainTests.TurnOffShadowCopy" executed="True" success="True" time="0.297" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TestDomainTests_Multiple" success="True" time="1.375" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.TestDomainTests_Multiple.AssemblyNodes" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.TestDomainTests_Multiple.BuildSuite" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainTests_Multiple.RootNode" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainTests_Multiple.RunMultipleAssemblies" executed="True" success="True" time="0.156" asserts="1" />
                          <test-case name="NUnit.Util.Tests.TestDomainTests_Multiple.TestCaseCount" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TestDomainTests_MultipleFixture" success="True" time="1.172" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.TestDomainTests_MultipleFixture.LoadFixture" executed="True" success="True" time="1.172" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TestLoaderAssemblyTests" success="True" time="5.953" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.TestLoaderAssemblyTests.AssemblyWithNoTests" executed="True" success="True" time="1.063" asserts="4" />
                          <test-case name="NUnit.Util.Tests.TestLoaderAssemblyTests.FileNotFound" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.TestLoaderAssemblyTests.LoadProject" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.TestLoaderAssemblyTests.LoadTest" executed="True" success="True" time="1.078" asserts="6" />
                          <test-case name="NUnit.Util.Tests.TestLoaderAssemblyTests.RunTest" executed="True" success="True" time="1.781" asserts="5" />
                          <test-case name="NUnit.Util.Tests.TestLoaderAssemblyTests.UnloadProject" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.TestLoaderAssemblyTests.UnloadTest" executed="True" success="True" time="2.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="VSProjectTests" success="True" time="0.109" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.VSProjectTests.FileNotFoundError" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.GenerateCorrectExtensionsFromVCProjectVS2005" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.InvalidProjectFormat" executed="True" success="True" time="0.016" asserts="0" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.InvalidXmlFormat" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.LoadCppProject" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.LoadCppProjectVS2005" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.LoadCppProjectWithMacros" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.LoadCsharpProject" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.LoadCsharpProjectVS2005" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.LoadInvalidFileType" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.LoadJsharpProject" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.LoadJsharpProjectVS2005" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.LoadProjectWithHebrewFileIncluded" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.LoadVbProject" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.LoadVbProjectVS2005" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.MissingAttributes" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.NoConfigurations" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.NotWebProject" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.ProjectExtensions" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.VSProjectTests.SolutionExtension" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlResultVisitorTest" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Util.Tests.XmlResultVisitorTest.HasMultipleCategories" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.XmlResultVisitorTest.HasMultipleProperties" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.XmlResultVisitorTest.HasSingleCategory" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.XmlResultVisitorTest.HasSingleProperty" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Util.Tests.XmlResultVisitorTest.SuiteResultHasCategories" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Util.Tests.XmlResultVisitorTest.TestHasCultureInfo" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Util.Tests.XmlResultVisitorTest.TestHasEnvironmentInfo" executed="True" success="True" time="0.000" asserts="9" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="D:\Dev\NUnit\nunit-2.5-branch\src\NUnitMocks\tests\bin\Debug\nunit.mocks.tests.dll" success="True" time="0.250" asserts="0">
        <results>
          <test-suite name="NUnit" success="True" time="0.250" asserts="0">
            <results>
              <test-suite name="Mocks" success="True" time="0.250" asserts="0">
                <results>
                  <test-suite name="Tests" success="True" time="0.250" asserts="0">
                    <results>
                      <test-suite name="DynamicMockTests" success="True" time="0.234" asserts="0">
                        <results>
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.CallMethod" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.CallMethodWithArgs" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.CreateMockForMBRClass" executed="True" success="True" time="0.000" asserts="13" />
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.CreateMockForNonMBRClassFails" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.DefaultReturnValues" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.ExpectedMethod" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.ExpectedMethodNotCalled" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.MethodWithReturnValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.MockHasDefaultName" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.MockHasNonDefaultName" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.OverrideMethodOnDynamicMock" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.RefParameter" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Mocks.Tests.DynamicMockTests.WrongReturnType" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="MockTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Mocks.Tests.MockTests.CallMultipleMethodsInDifferentOrder" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.CallMultipleMethodsSomeWithoutExpectations" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.ChangeExpectAndReturnToFixedReturn" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.ChangeFixedReturnToExpectAndReturn" executed="True" success="True" time="0.000" asserts="9" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.ExpectAndReturn" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.ExpectAndReturnNull" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.ExpectAndReturnWithArgument" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.ExpectAndReturnWithWrongArgument" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.ExpectAndThrowException" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.ExpectNoCallFails" executed="True" success="True" time="0.016" asserts="0" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.ExpectNoCallSucceeds" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.FailWithParametersSpecified" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.IgnoreArguments" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.MethodNotCalled" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.MockHasName" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.MultipleCallsToSameMethod" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.MultipleExpectAndReturn" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.MultipleExpectations" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.NotEnoughCalls" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.OneExpectation" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.RequireArguments" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.SetReturnValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.SetReturnValueMultipleTimesOnMultipleMethods" executed="True" success="True" time="0.000" asserts="7" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.SetReturnValueRepeatedCalls" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.SetReturnValueWithoutCalling" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.StrictDefaultsToFalse" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.StrictMode" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.TooManyCalls" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.UnexpectedCallsIgnored" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Mocks.Tests.MockTests.VerifyNewMock" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="D:\Dev\NUnit\nunit-2.5-branch\src\NUnitExtensions\tests\bin\Debug\nunit.extensions.tests.dll" success="True" time="0.188" asserts="0">
        <results>
          <test-suite name="NUnit" success="True" time="0.188" asserts="0">
            <results>
              <test-suite name="Core" success="True" time="0.188" asserts="0">
                <results>
                  <test-suite name="Extensions" success="True" time="0.188" asserts="0">
                    <results>
                      <test-suite name="Tests" success="True" time="0.188" asserts="0">
                        <results>
                          <test-suite name="RepeatedTestFixture" success="True" time="0.188" asserts="0">
                            <results>
                              <test-case name="NUnit.Core.Extensions.Tests.RepeatedTestFixture.IgnoreWorksWithRepeatedTest" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="NUnit.Core.Extensions.Tests.RepeatedTestFixture.RepeatedTestIsBuiltCorrectly" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="NUnit.Core.Extensions.Tests.RepeatedTestFixture.RepeatFailOnFirst" executed="True" success="True" time="0.016" asserts="4" />
                              <test-case name="NUnit.Core.Extensions.Tests.RepeatedTestFixture.RepeatFailOnThird" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="NUnit.Core.Extensions.Tests.RepeatedTestFixture.RepeatSuccess" executed="True" success="True" time="0.000" asserts="6" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="D:\Dev\NUnit\nunit-2.5-branch\src\ConsoleRunner\tests\bin\Debug\nunit-console.tests.dll" success="True" time="21.844" asserts="0">
        <results>
          <test-suite name="NUnit" success="True" time="21.844" asserts="0">
            <results>
              <test-suite name="ConsoleRunner" success="True" time="21.828" asserts="0">
                <results>
                  <test-suite name="Tests" success="True" time="21.828" asserts="0">
                    <results>
                      <test-suite name="CommandLineTests" success="True" time="0.203" asserts="0">
                        <results>
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.AllowForwardSlashDefaultsCorrectly" executed="True" success="True" time="0.125" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.AssemblyAloneIsValid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.AssemblyName" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.FileNameWithoutXmlParameterIsInvalid" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.FixtureNamePlusAssemblyIsValid" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.HelpTextUsesCorrectDelimiterForPlatform" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.InvalidCommandLineParms" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.InvalidOption" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.NoFixtureNameProvided" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.NoParametersCount" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.OptionsAreRecognized" executed="True" success="True" time="0.016" asserts="104" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.TransformParameter" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.XmlParameter" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.XmlParameterWithFullPath" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.XmlParameterWithFullPathUsingEqualSign" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests.XmlParameterWithoutFileNameIsInvalid" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CommandLineTests_MultipleAssemblies" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests_MultipleAssemblies.CheckParameters" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests_MultipleAssemblies.FixtureParameters" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests_MultipleAssemblies.FixtureValidate" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests_MultipleAssemblies.MultipleAssemblyValidate" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.CommandLineTests_MultipleAssemblies.ParameterCount" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ConsoleRunnerTest" success="True" time="21.609" asserts="0">
                        <results>
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.Bug1073539Test" executed="True" success="True" time="1.547" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.Bug1311644Test" executed="True" success="True" time="1.516" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.CanRunWithMultipleTestDomains" executed="True" success="True" time="3.297" asserts="2" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.CanRunWithMultipleTestDomains_NoThread" executed="True" success="True" time="2.938" asserts="2" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.CanRunWithoutTestDomain" executed="True" success="True" time="0.078" asserts="2" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.CanRunWithoutTestDomain_NoThread" executed="True" success="True" time="0.063" asserts="2" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.CanRunWithSingleTestDomain" executed="True" success="True" time="1.406" asserts="2" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.CanRunWithSingleTestDomain_NoThread" executed="True" success="True" time="1.328" asserts="2" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.FailureFixture" executed="True" success="True" time="1.359" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.InvalidAssembly" executed="True" success="True" time="0.953" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.InvalidFixture" executed="True" success="True" time="1.313" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.MultiFailureFixture" executed="True" success="True" time="1.531" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.SuccessFixture" executed="True" success="True" time="1.359" asserts="1" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.XmlResult" executed="True" success="True" time="1.500" asserts="2" />
                          <test-case name="NUnit.ConsoleRunner.Tests.ConsoleRunnerTest.XmlToConsole" executed="True" success="True" time="1.391" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="D:\Dev\NUnit\nunit-2.5-branch\src\GuiComponents\tests\bin\Debug\nunit.uikit.tests.dll" success="True" time="1.953" asserts="0">
        <results>
          <test-suite name="NUnit" success="True" time="1.953" asserts="0">
            <results>
              <test-suite name="UiKit" success="True" time="1.938" asserts="0">
                <results>
                  <test-suite name="Tests" success="True" time="1.938" asserts="0">
                    <results>
                      <test-suite name="AddConfigurationDialogTests" success="True" time="0.422" asserts="0">
                        <results>
                          <test-case name="NUnit.UiKit.Tests.AddConfigurationDialogTests.CheckComboBox" executed="True" success="True" time="0.313" asserts="5" />
                          <test-case name="NUnit.UiKit.Tests.AddConfigurationDialogTests.CheckForControls" executed="True" success="True" time="0.016" asserts="0" />
                          <test-case name="NUnit.UiKit.Tests.AddConfigurationDialogTests.CheckTextBox" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.UiKit.Tests.AddConfigurationDialogTests.TestComplexEntry" executed="True" success="True" time="0.063" asserts="2" />
                          <test-case name="NUnit.UiKit.Tests.AddConfigurationDialogTests.TestSimpleEntry" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ErrorDisplayTests" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="NUnit.UiKit.Tests.ErrorDisplayTests.ControlsArePositionedCorrectly" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.UiKit.Tests.ErrorDisplayTests.ControlsExist" executed="True" success="True" time="0.016" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="LongRunningOperationDisplayTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.UiKit.Tests.LongRunningOperationDisplayTests.CreateDisplay" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ProgressBarTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.UiKit.Tests.ProgressBarTests.TestProgressDisplay" executed="True" success="True" time="0.016" asserts="19" />
                        </results>
                      </test-suite>
                      <test-suite name="RecentFileMenuHandlerTests" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="NUnit.UiKit.Tests.RecentFileMenuHandlerTests.DisableOnLoadWhenEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.UiKit.Tests.RecentFileMenuHandlerTests.EnableOnLoadWhenNotEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.UiKit.Tests.RecentFileMenuHandlerTests.LoadMenuItems" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SimpleTextDisplayTests" success="True" time="0.219" asserts="0">
                        <results>
                          <test-case name="NUnit.UiKit.Tests.SimpleTextDisplayTests.AppendText_AfterCreation" executed="True" success="True" time="0.016" asserts="7" />
                          <test-case name="NUnit.UiKit.Tests.SimpleTextDisplayTests.AppendText_BeforeAndAfterCreation" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.UiKit.Tests.SimpleTextDisplayTests.AppendText_BeforeCreation" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.UiKit.Tests.SimpleTextDisplayTests.ClearText_AfterCreation" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.UiKit.Tests.SimpleTextDisplayTests.ClearText_BeforeCreation" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.UiKit.Tests.SimpleTextDisplayTests.SetText_AfterCreation" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="NUnit.UiKit.Tests.SimpleTextDisplayTests.SetText_BeforeCreation" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.UiKit.Tests.SimpleTextDisplayTests.StressTest" executed="True" success="True" time="0.188" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="StatusBarTests" success="True" time="0.078" asserts="0">
                        <results>
                          <test-case name="NUnit.UiKit.Tests.StatusBarTests.TestConstruction" executed="True" success="True" time="0.031" asserts="5" />
                          <test-case name="NUnit.UiKit.Tests.StatusBarTests.TestFinalDisplay" executed="True" success="True" time="0.016" asserts="6" />
                          <test-case name="NUnit.UiKit.Tests.StatusBarTests.TestInitialization" executed="True" success="True" time="0.016" asserts="10" />
                          <test-case name="NUnit.UiKit.Tests.StatusBarTests.TestProgressDisplay" executed="True" success="True" time="0.016" asserts="89" />
                        </results>
                      </test-suite>
                      <test-suite name="TestSuiteTreeNodeTests" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeNodeTests.ClearResult" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeNodeTests.ClearResults" executed="True" success="True" time="0.000" asserts="8" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeNodeTests.ConstructFromTestInfo" executed="True" success="True" time="0.016" asserts="6" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeNodeTests.SetResult_Failure" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeNodeTests.SetResult_Ignore" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeNodeTests.SetResult_Init" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeNodeTests.SetResult_Skipped" executed="True" success="True" time="0.031" asserts="3" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeNodeTests.SetResult_Success" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="TestSuiteTreeViewFixture" success="True" time="0.453" asserts="0">
                        <results>
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeViewFixture.BuildFromResult" executed="True" success="True" time="0.094" asserts="15" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeViewFixture.BuildTreeView" executed="True" success="True" time="0.047" asserts="5" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeViewFixture.ClearTree" executed="True" success="True" time="0.063" asserts="1" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeViewFixture.ProcessChecks" executed="True" success="True" time="0.063" asserts="7" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeViewFixture.ReloadTree" executed="True" success="True" time="0.063" asserts="235" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeViewFixture.ReloadTreeWithWrongTest" executed="True" success="True" time="0.047" asserts="0" />
                          <test-case name="NUnit.UiKit.Tests.TestSuiteTreeViewFixture.SetTestResult" executed="True" success="True" time="0.063" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="VisualStateTests" success="True" time="0.547" asserts="0">
                        <results>
                          <test-case name="NUnit.UiKit.Tests.VisualStateTests.SaveAndRestoreVisualState" executed="True" success="True" time="0.547" asserts="5" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="D:\Dev\NUnit\nunit-2.5-branch\src\GuiRunner\tests\bin\Debug\nunit-gui.tests.dll" success="True" time="0.609" asserts="0">
        <results>
          <test-suite name="NUnit" success="True" time="0.594" asserts="0">
            <results>
              <test-suite name="Gui" success="True" time="0.594" asserts="0">
                <results>
                  <test-suite name="Tests" success="True" time="0.594" asserts="0">
                    <results>
                      <test-suite name="CommandLineTests" success="True" time="0.156" asserts="0">
                        <results>
                          <test-case name="NUnit.Gui.Tests.CommandLineTests.AssemblyName" executed="True" success="True" time="0.109" asserts="1" />
                          <test-case name="NUnit.Gui.Tests.CommandLineTests.Help" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Gui.Tests.CommandLineTests.HelpTextUsesCorrectDelimiterForPlatform" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="NUnit.Gui.Tests.CommandLineTests.InvalidArgs" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Gui.Tests.CommandLineTests.InvalidCommandLineParms" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Gui.Tests.CommandLineTests.NoNameValuePairs" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Gui.Tests.CommandLineTests.NoParametersCount" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Gui.Tests.CommandLineTests.ShortHelp" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="NUnit.Gui.Tests.CommandLineTests.ValidateSuccessful" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ExceptionDetailsFormTests" success="True" time="0.078" asserts="0">
                        <results>
                          <test-case name="NUnit.Gui.Tests.ExceptionDetailsFormTests.ControlsArePositionedCorrectly" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Gui.Tests.ExceptionDetailsFormTests.ControlsExist" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="NUnit.Gui.Tests.ExceptionDetailsFormTests.MessageDisplaysCorrectly" executed="True" success="True" time="0.047" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ProjectEditorTests" success="True" time="0.344" asserts="0">
                        <results>
                          <test-case name="NUnit.Gui.Tests.ProjectEditorTests.CheckControls" executed="True" success="True" time="0.094" asserts="0" />
                          <test-case name="NUnit.Gui.Tests.ProjectEditorTests.InitialFieldValues" executed="True" success="True" time="0.125" asserts="2" />
                          <test-case name="NUnit.Gui.Tests.ProjectEditorTests.SetProjectBase" executed="True" success="True" time="0.125" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="D:\Dev\NUnit\nunit-2.5-branch\src\NUnitFixtures\tests\bin\Debug\nunit.fixtures.tests.dll" success="True" time="0.547" asserts="0">
        <results>
          <test-suite name="NUnit" success="True" time="0.547" asserts="0">
            <results>
              <test-suite name="Fixtures" success="True" time="0.547" asserts="0">
                <results>
                  <test-suite name="Tests" success="True" time="0.547" asserts="0">
                    <results>
                      <test-suite name="CompilationTests" success="True" time="0.531" asserts="0">
                        <results>
                          <test-case name="NUnit.Fixtures.Tests.CompilationTests.CheckDefaultSettings" executed="True" success="True" time="0.094" asserts="5" />
                          <test-case name="NUnit.Fixtures.Tests.CompilationTests.CompileToFile" executed="True" success="True" time="0.141" asserts="3" />
                          <test-case name="NUnit.Fixtures.Tests.CompilationTests.CompilingBadCodeGivesAnError" executed="True" success="True" time="0.172" asserts="1" />
                          <test-case name="NUnit.Fixtures.Tests.CompilationTests.LoadTestsFromCompiledAssembly" executed="True" success="True" time="0.109" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="TestTreeTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="NUnit.Fixtures.Tests.TestTreeTests.MatchingTreesAreEqual" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="NUnit.Fixtures.Tests.TestTreeTests.NonMatchingTreesAreNotEqual" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>